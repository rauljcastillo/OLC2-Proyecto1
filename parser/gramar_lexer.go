// Code generated from Gramar.g4 by ANTLR 4.13.0. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type GramarLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var GramarLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func gramarlexerLexerInit() {
	staticData := &GramarLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'for'", "'in'", "'{'", "'}'", "'...'", "'while'", "'switch'", "'case'",
		"':'", "'break'", "'default'", "'if'", "'else'", "'('", "')'", "'='",
		"'?'", "'+='", "'-='", "'!'", "'-'", "'*'", "'/'", "'%'", "'+'", "'<'",
		"'>'", "'<='", "'>='", "'=='", "'!='", "", "", "", "'print'", "'true'",
		"'false'", "'Int'", "'Float'", "'String'", "'Bool'", "'Character'",
		"'var'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "WS", "COMO",
		"COMM", "PRINT", "TRUE", "FALSE", "RINT", "RFLOAT", "RSTRING", "RBOOL",
		"RChar", "RVAR", "CADENA", "ID", "INT", "DOUBLE",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "WS", "COMO",
		"COMM", "PRINT", "TRUE", "FALSE", "RINT", "RFLOAT", "RSTRING", "RBOOL",
		"RChar", "RVAR", "CADENA", "ID", "INT", "DOUBLE",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 47, 313, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40, 2, 41, 7,
		41, 2, 42, 7, 42, 2, 43, 7, 43, 2, 44, 7, 44, 2, 45, 7, 45, 2, 46, 7, 46,
		1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 3, 1, 3, 1, 4,
		1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6,
		1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9,
		1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10, 1, 10,
		1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1,
		13, 1, 13, 1, 14, 1, 14, 1, 15, 1, 15, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17,
		1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 20, 1, 20, 1, 21, 1, 21, 1, 22, 1,
		22, 1, 23, 1, 23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27,
		1, 27, 1, 28, 1, 28, 1, 28, 1, 29, 1, 29, 1, 29, 1, 30, 1, 30, 1, 30, 1,
		31, 4, 31, 196, 8, 31, 11, 31, 12, 31, 197, 1, 31, 1, 31, 1, 32, 1, 32,
		1, 32, 1, 32, 5, 32, 206, 8, 32, 10, 32, 12, 32, 209, 9, 32, 1, 32, 1,
		32, 1, 33, 1, 33, 1, 33, 1, 33, 5, 33, 217, 8, 33, 10, 33, 12, 33, 220,
		9, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 33, 1, 34, 1, 34, 1, 34, 1, 34, 1,
		34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 36,
		1, 36, 1, 36, 1, 37, 1, 37, 1, 37, 1, 37, 1, 38, 1, 38, 1, 38, 1, 38, 1,
		38, 1, 38, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 39, 1, 40, 1, 40,
		1, 40, 1, 40, 1, 40, 1, 41, 1, 41, 1, 41, 1, 41, 1, 41, 1, 41, 1, 41, 1,
		41, 1, 41, 1, 41, 1, 42, 1, 42, 1, 42, 1, 42, 1, 43, 1, 43, 1, 43, 1, 43,
		5, 43, 284, 8, 43, 10, 43, 12, 43, 287, 9, 43, 1, 43, 1, 43, 1, 44, 1,
		44, 5, 44, 293, 8, 44, 10, 44, 12, 44, 296, 9, 44, 1, 45, 4, 45, 299, 8,
		45, 11, 45, 12, 45, 300, 1, 46, 4, 46, 304, 8, 46, 11, 46, 12, 46, 305,
		1, 46, 1, 46, 4, 46, 310, 8, 46, 11, 46, 12, 46, 311, 1, 218, 0, 47, 1,
		1, 3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11,
		23, 12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20,
		41, 21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29,
		59, 30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 35, 71, 36, 73, 37, 75, 38,
		77, 39, 79, 40, 81, 41, 83, 42, 85, 43, 87, 44, 89, 45, 91, 46, 93, 47,
		1, 0, 6, 2, 0, 9, 10, 32, 32, 1, 0, 10, 10, 3, 0, 10, 10, 13, 13, 34, 34,
		3, 0, 65, 90, 95, 95, 97, 122, 3, 0, 48, 57, 65, 90, 97, 122, 1, 0, 48,
		57, 321, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1,
		0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15,
		1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0,
		23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0,
		0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0,
		0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0,
		0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1,
		0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61,
		1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0,
		69, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1, 0, 0, 0,
		0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 0, 81, 1, 0, 0, 0, 0, 83, 1, 0, 0,
		0, 0, 85, 1, 0, 0, 0, 0, 87, 1, 0, 0, 0, 0, 89, 1, 0, 0, 0, 0, 91, 1, 0,
		0, 0, 0, 93, 1, 0, 0, 0, 1, 95, 1, 0, 0, 0, 3, 99, 1, 0, 0, 0, 5, 102,
		1, 0, 0, 0, 7, 104, 1, 0, 0, 0, 9, 106, 1, 0, 0, 0, 11, 110, 1, 0, 0, 0,
		13, 116, 1, 0, 0, 0, 15, 123, 1, 0, 0, 0, 17, 128, 1, 0, 0, 0, 19, 130,
		1, 0, 0, 0, 21, 136, 1, 0, 0, 0, 23, 144, 1, 0, 0, 0, 25, 147, 1, 0, 0,
		0, 27, 152, 1, 0, 0, 0, 29, 154, 1, 0, 0, 0, 31, 156, 1, 0, 0, 0, 33, 158,
		1, 0, 0, 0, 35, 160, 1, 0, 0, 0, 37, 163, 1, 0, 0, 0, 39, 166, 1, 0, 0,
		0, 41, 168, 1, 0, 0, 0, 43, 170, 1, 0, 0, 0, 45, 172, 1, 0, 0, 0, 47, 174,
		1, 0, 0, 0, 49, 176, 1, 0, 0, 0, 51, 178, 1, 0, 0, 0, 53, 180, 1, 0, 0,
		0, 55, 182, 1, 0, 0, 0, 57, 185, 1, 0, 0, 0, 59, 188, 1, 0, 0, 0, 61, 191,
		1, 0, 0, 0, 63, 195, 1, 0, 0, 0, 65, 201, 1, 0, 0, 0, 67, 212, 1, 0, 0,
		0, 69, 226, 1, 0, 0, 0, 71, 232, 1, 0, 0, 0, 73, 237, 1, 0, 0, 0, 75, 243,
		1, 0, 0, 0, 77, 247, 1, 0, 0, 0, 79, 253, 1, 0, 0, 0, 81, 260, 1, 0, 0,
		0, 83, 265, 1, 0, 0, 0, 85, 275, 1, 0, 0, 0, 87, 279, 1, 0, 0, 0, 89, 290,
		1, 0, 0, 0, 91, 298, 1, 0, 0, 0, 93, 303, 1, 0, 0, 0, 95, 96, 5, 102, 0,
		0, 96, 97, 5, 111, 0, 0, 97, 98, 5, 114, 0, 0, 98, 2, 1, 0, 0, 0, 99, 100,
		5, 105, 0, 0, 100, 101, 5, 110, 0, 0, 101, 4, 1, 0, 0, 0, 102, 103, 5,
		123, 0, 0, 103, 6, 1, 0, 0, 0, 104, 105, 5, 125, 0, 0, 105, 8, 1, 0, 0,
		0, 106, 107, 5, 46, 0, 0, 107, 108, 5, 46, 0, 0, 108, 109, 5, 46, 0, 0,
		109, 10, 1, 0, 0, 0, 110, 111, 5, 119, 0, 0, 111, 112, 5, 104, 0, 0, 112,
		113, 5, 105, 0, 0, 113, 114, 5, 108, 0, 0, 114, 115, 5, 101, 0, 0, 115,
		12, 1, 0, 0, 0, 116, 117, 5, 115, 0, 0, 117, 118, 5, 119, 0, 0, 118, 119,
		5, 105, 0, 0, 119, 120, 5, 116, 0, 0, 120, 121, 5, 99, 0, 0, 121, 122,
		5, 104, 0, 0, 122, 14, 1, 0, 0, 0, 123, 124, 5, 99, 0, 0, 124, 125, 5,
		97, 0, 0, 125, 126, 5, 115, 0, 0, 126, 127, 5, 101, 0, 0, 127, 16, 1, 0,
		0, 0, 128, 129, 5, 58, 0, 0, 129, 18, 1, 0, 0, 0, 130, 131, 5, 98, 0, 0,
		131, 132, 5, 114, 0, 0, 132, 133, 5, 101, 0, 0, 133, 134, 5, 97, 0, 0,
		134, 135, 5, 107, 0, 0, 135, 20, 1, 0, 0, 0, 136, 137, 5, 100, 0, 0, 137,
		138, 5, 101, 0, 0, 138, 139, 5, 102, 0, 0, 139, 140, 5, 97, 0, 0, 140,
		141, 5, 117, 0, 0, 141, 142, 5, 108, 0, 0, 142, 143, 5, 116, 0, 0, 143,
		22, 1, 0, 0, 0, 144, 145, 5, 105, 0, 0, 145, 146, 5, 102, 0, 0, 146, 24,
		1, 0, 0, 0, 147, 148, 5, 101, 0, 0, 148, 149, 5, 108, 0, 0, 149, 150, 5,
		115, 0, 0, 150, 151, 5, 101, 0, 0, 151, 26, 1, 0, 0, 0, 152, 153, 5, 40,
		0, 0, 153, 28, 1, 0, 0, 0, 154, 155, 5, 41, 0, 0, 155, 30, 1, 0, 0, 0,
		156, 157, 5, 61, 0, 0, 157, 32, 1, 0, 0, 0, 158, 159, 5, 63, 0, 0, 159,
		34, 1, 0, 0, 0, 160, 161, 5, 43, 0, 0, 161, 162, 5, 61, 0, 0, 162, 36,
		1, 0, 0, 0, 163, 164, 5, 45, 0, 0, 164, 165, 5, 61, 0, 0, 165, 38, 1, 0,
		0, 0, 166, 167, 5, 33, 0, 0, 167, 40, 1, 0, 0, 0, 168, 169, 5, 45, 0, 0,
		169, 42, 1, 0, 0, 0, 170, 171, 5, 42, 0, 0, 171, 44, 1, 0, 0, 0, 172, 173,
		5, 47, 0, 0, 173, 46, 1, 0, 0, 0, 174, 175, 5, 37, 0, 0, 175, 48, 1, 0,
		0, 0, 176, 177, 5, 43, 0, 0, 177, 50, 1, 0, 0, 0, 178, 179, 5, 60, 0, 0,
		179, 52, 1, 0, 0, 0, 180, 181, 5, 62, 0, 0, 181, 54, 1, 0, 0, 0, 182, 183,
		5, 60, 0, 0, 183, 184, 5, 61, 0, 0, 184, 56, 1, 0, 0, 0, 185, 186, 5, 62,
		0, 0, 186, 187, 5, 61, 0, 0, 187, 58, 1, 0, 0, 0, 188, 189, 5, 61, 0, 0,
		189, 190, 5, 61, 0, 0, 190, 60, 1, 0, 0, 0, 191, 192, 5, 33, 0, 0, 192,
		193, 5, 61, 0, 0, 193, 62, 1, 0, 0, 0, 194, 196, 7, 0, 0, 0, 195, 194,
		1, 0, 0, 0, 196, 197, 1, 0, 0, 0, 197, 195, 1, 0, 0, 0, 197, 198, 1, 0,
		0, 0, 198, 199, 1, 0, 0, 0, 199, 200, 6, 31, 0, 0, 200, 64, 1, 0, 0, 0,
		201, 202, 5, 47, 0, 0, 202, 203, 5, 47, 0, 0, 203, 207, 1, 0, 0, 0, 204,
		206, 8, 1, 0, 0, 205, 204, 1, 0, 0, 0, 206, 209, 1, 0, 0, 0, 207, 205,
		1, 0, 0, 0, 207, 208, 1, 0, 0, 0, 208, 210, 1, 0, 0, 0, 209, 207, 1, 0,
		0, 0, 210, 211, 6, 32, 0, 0, 211, 66, 1, 0, 0, 0, 212, 213, 5, 47, 0, 0,
		213, 214, 5, 42, 0, 0, 214, 218, 1, 0, 0, 0, 215, 217, 9, 0, 0, 0, 216,
		215, 1, 0, 0, 0, 217, 220, 1, 0, 0, 0, 218, 219, 1, 0, 0, 0, 218, 216,
		1, 0, 0, 0, 219, 221, 1, 0, 0, 0, 220, 218, 1, 0, 0, 0, 221, 222, 5, 42,
		0, 0, 222, 223, 5, 47, 0, 0, 223, 224, 1, 0, 0, 0, 224, 225, 6, 33, 0,
		0, 225, 68, 1, 0, 0, 0, 226, 227, 5, 112, 0, 0, 227, 228, 5, 114, 0, 0,
		228, 229, 5, 105, 0, 0, 229, 230, 5, 110, 0, 0, 230, 231, 5, 116, 0, 0,
		231, 70, 1, 0, 0, 0, 232, 233, 5, 116, 0, 0, 233, 234, 5, 114, 0, 0, 234,
		235, 5, 117, 0, 0, 235, 236, 5, 101, 0, 0, 236, 72, 1, 0, 0, 0, 237, 238,
		5, 102, 0, 0, 238, 239, 5, 97, 0, 0, 239, 240, 5, 108, 0, 0, 240, 241,
		5, 115, 0, 0, 241, 242, 5, 101, 0, 0, 242, 74, 1, 0, 0, 0, 243, 244, 5,
		73, 0, 0, 244, 245, 5, 110, 0, 0, 245, 246, 5, 116, 0, 0, 246, 76, 1, 0,
		0, 0, 247, 248, 5, 70, 0, 0, 248, 249, 5, 108, 0, 0, 249, 250, 5, 111,
		0, 0, 250, 251, 5, 97, 0, 0, 251, 252, 5, 116, 0, 0, 252, 78, 1, 0, 0,
		0, 253, 254, 5, 83, 0, 0, 254, 255, 5, 116, 0, 0, 255, 256, 5, 114, 0,
		0, 256, 257, 5, 105, 0, 0, 257, 258, 5, 110, 0, 0, 258, 259, 5, 103, 0,
		0, 259, 80, 1, 0, 0, 0, 260, 261, 5, 66, 0, 0, 261, 262, 5, 111, 0, 0,
		262, 263, 5, 111, 0, 0, 263, 264, 5, 108, 0, 0, 264, 82, 1, 0, 0, 0, 265,
		266, 5, 67, 0, 0, 266, 267, 5, 104, 0, 0, 267, 268, 5, 97, 0, 0, 268, 269,
		5, 114, 0, 0, 269, 270, 5, 97, 0, 0, 270, 271, 5, 99, 0, 0, 271, 272, 5,
		116, 0, 0, 272, 273, 5, 101, 0, 0, 273, 274, 5, 114, 0, 0, 274, 84, 1,
		0, 0, 0, 275, 276, 5, 118, 0, 0, 276, 277, 5, 97, 0, 0, 277, 278, 5, 114,
		0, 0, 278, 86, 1, 0, 0, 0, 279, 285, 5, 34, 0, 0, 280, 284, 8, 2, 0, 0,
		281, 282, 5, 34, 0, 0, 282, 284, 5, 34, 0, 0, 283, 280, 1, 0, 0, 0, 283,
		281, 1, 0, 0, 0, 284, 287, 1, 0, 0, 0, 285, 283, 1, 0, 0, 0, 285, 286,
		1, 0, 0, 0, 286, 288, 1, 0, 0, 0, 287, 285, 1, 0, 0, 0, 288, 289, 5, 34,
		0, 0, 289, 88, 1, 0, 0, 0, 290, 294, 7, 3, 0, 0, 291, 293, 7, 4, 0, 0,
		292, 291, 1, 0, 0, 0, 293, 296, 1, 0, 0, 0, 294, 292, 1, 0, 0, 0, 294,
		295, 1, 0, 0, 0, 295, 90, 1, 0, 0, 0, 296, 294, 1, 0, 0, 0, 297, 299, 7,
		5, 0, 0, 298, 297, 1, 0, 0, 0, 299, 300, 1, 0, 0, 0, 300, 298, 1, 0, 0,
		0, 300, 301, 1, 0, 0, 0, 301, 92, 1, 0, 0, 0, 302, 304, 7, 5, 0, 0, 303,
		302, 1, 0, 0, 0, 304, 305, 1, 0, 0, 0, 305, 303, 1, 0, 0, 0, 305, 306,
		1, 0, 0, 0, 306, 307, 1, 0, 0, 0, 307, 309, 5, 46, 0, 0, 308, 310, 7, 5,
		0, 0, 309, 308, 1, 0, 0, 0, 310, 311, 1, 0, 0, 0, 311, 309, 1, 0, 0, 0,
		311, 312, 1, 0, 0, 0, 312, 94, 1, 0, 0, 0, 10, 0, 197, 207, 218, 283, 285,
		294, 300, 305, 311, 1, 6, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// GramarLexerInit initializes any static state used to implement GramarLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewGramarLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func GramarLexerInit() {
	staticData := &GramarLexerLexerStaticData
	staticData.once.Do(gramarlexerLexerInit)
}

// NewGramarLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewGramarLexer(input antlr.CharStream) *GramarLexer {
	GramarLexerInit()
	l := new(GramarLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &GramarLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "Gramar.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// GramarLexer tokens.
const (
	GramarLexerT__0    = 1
	GramarLexerT__1    = 2
	GramarLexerT__2    = 3
	GramarLexerT__3    = 4
	GramarLexerT__4    = 5
	GramarLexerT__5    = 6
	GramarLexerT__6    = 7
	GramarLexerT__7    = 8
	GramarLexerT__8    = 9
	GramarLexerT__9    = 10
	GramarLexerT__10   = 11
	GramarLexerT__11   = 12
	GramarLexerT__12   = 13
	GramarLexerT__13   = 14
	GramarLexerT__14   = 15
	GramarLexerT__15   = 16
	GramarLexerT__16   = 17
	GramarLexerT__17   = 18
	GramarLexerT__18   = 19
	GramarLexerT__19   = 20
	GramarLexerT__20   = 21
	GramarLexerT__21   = 22
	GramarLexerT__22   = 23
	GramarLexerT__23   = 24
	GramarLexerT__24   = 25
	GramarLexerT__25   = 26
	GramarLexerT__26   = 27
	GramarLexerT__27   = 28
	GramarLexerT__28   = 29
	GramarLexerT__29   = 30
	GramarLexerT__30   = 31
	GramarLexerWS      = 32
	GramarLexerCOMO    = 33
	GramarLexerCOMM    = 34
	GramarLexerPRINT   = 35
	GramarLexerTRUE    = 36
	GramarLexerFALSE   = 37
	GramarLexerRINT    = 38
	GramarLexerRFLOAT  = 39
	GramarLexerRSTRING = 40
	GramarLexerRBOOL   = 41
	GramarLexerRChar   = 42
	GramarLexerRVAR    = 43
	GramarLexerCADENA  = 44
	GramarLexerID      = 45
	GramarLexerINT     = 46
	GramarLexerDOUBLE  = 47
)
